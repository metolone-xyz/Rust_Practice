/*
 *ライフタイム注釈記法 ... いかなる参照の生存期間も変えることはない
    ライフタイム引数を指定された関数は、あらゆるライフタイムの参照を受け取ることができる
    
    &i32 ただの参照
    &'a i32 明示的なライフタイム付きの参照
    &'a mut i32 明示的なライフタイム付きの可変参照
 */

fn main() {
    let str1 = "abcd";
    let str2 = "xyz";

    println!("{}", longest(str1, str2));
}
/*
 * ２つの引数x,yは少なくともライフタイム'aにと同じだけ生きる文字列スライスであるとコンパイラに教える
 */
fn longest<'a>(x: &'a str, y: &'a str) -> &'a str {
    if x.len() > y.len() {
        x
    }else {
        y
    }
}
